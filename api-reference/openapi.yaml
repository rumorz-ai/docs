
openapi: 3.0.0
info:
  title: Rumorz API
  version: v0
servers:
  - url: https://rumorz.azurewebsites.net
paths:
  /graph/get_feed:
    post:
      tags:
        - Graph
      summary: Get Feed
      description: Get the feed of posts related to the specified entities and filters.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  items:
                    type: string
                lookback:
                  type: string
                  enum: [1H, 6H, 12H, 1D, 7D, 30D, 90D]
                  description: Time period to look back
                scores_filter:
                  type: string
                page:
                  type: integer
                limit:
                  type: integer
      responses:
        '200':
          description: Success

  /graph/search_entities:
    post:
      tags:
        - Graph
      summary: Search Entities
      description: Search for entities in the Rumorz Graph by name and/or symbol.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                asset_class:
                  type: string
                  enum: [crypto, commodities]
                entity_type:
                  type: string
                  enum: [financial_asset, company, organization, person, place]
                symbol_search:
                  type: string
                limit:
                  type: integer
      responses:
        '200':
          description: Success

  /graph/get_ranking:
    post:
      tags:
        - Graph
      summary: Get Ranking
      description: Returns a ranking of every single entity in the Graph based on the given parameters.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lookback:
                  type: string
                  enum: [1H, 6H, 12H, 1D, 7D, 30D, 90D]
                page:
                  type: integer
                limit:
                  type: integer
                sort_by:
                  type: string
                  enum: [mentions, sentiment, excitement, optimism, pessimism, fear, uncertainty, surprise]
                entity_type:
                  type: string
                  enum: [financial_asset, company, organization, person, place]
                ascending:
                  type: boolean
      responses:
        '200':
          description: Success

  /graph/get_metrics:
    post:
      tags:
        - Graph
      summary: Get Metrics
      description: Get metrics for an entity in the Rumorz Graph.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  enum: [last, average, ticks, price_summary]
                ids:
                  type: array
                  items:
                    type: string
                metrics:
                  type: array
                  items:
                    type: string
                    enum: [mentions, sentiment, excitement, optimism, pessimism, fear, uncertainty, surprise, price]
                lookback:
                  type: string
                  enum: [1H, 6H, 12H, 1D, 7D, 30D, 90D]
                page:
                  type: integer
                limit:
                  type: integer
      responses:
        '200':
          description: Success

  /graph/get_price_stats:
    post:
      tags:
        - Graph
      summary: Get Price Stats
      description: Get summary price stats of a financial asset entity in the Rumorz Graph.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
      responses:
        '200':
          description: Success

  /agent/create_agent:
    post:
      tags:
        - Agent
      summary: Create Agent
      description: Create an agent with a goal, name, and personality.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                goal:
                  type: string
                name:
                  type: string
                personality:
                  type: string
      responses:
        '200':
          description: Success

  /agent/summarize:
    post:
      tags:
        - Agent
      summary: Summarize
      description: Summarize events and news for any entity in the graph.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                timestamp:
                  type: string
                scores_filter:
                  type: string
      responses:
        '200':
          description: Success

  /agent/get_state:
    post:
      tags:
        - Agent
      summary: Get State
      description: Get the state of an agent. This includes current sentiment, personality, trading strategy, and more.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
      responses:
        '200':
          description: Success

  /agent/get_logs:
    post:
      tags:
        - Agent
      summary: Get Logs
      description: Get logs of an agent's activity.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                lookback:
                  type: string
                  enum: [1H, 6H, 12H, 1D, 7D, 30D, 90D]
                limit:
                  type: integer
      responses:
        '200':
          description: Success

components:
  schemas:
    Lookback:
      type: string
      enum: [1H, 6H, 12H, 1D, 7D, 30D, 90D]
    EntityType:
      type: string
      enum: [financial_asset, company, organization, person, place]
    AssetClass:
      type: string
      enum: [crypto, commodities]
    EntityMetricTransform:
      type: string
      enum: [last, average, ticks, price_summary]
    EntityMetrics:
      type: string
      enum: [mentions, sentiment, excitement, optimism, pessimism, fear, uncertainty, surprise]
    FinancialAssetMetrics:
      type: string
      enum: [price]
    TimeSeriesResample:
      type: string
      enum: [1T, 5T, 15T, 30T, 1H, 1D]
    TimeHorizon:
      type: string
      enum: [short, long]
